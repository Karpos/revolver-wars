<?xml version="1.0" ?>

<!-- Author: Francesco Montorsi <frm@users.sourceforge.net>             -->
<!-- RCS-ID: $Id: wxlua.bkl,v 1.42 2008/01/19 21:37:09 jrl1 Exp $      -->


<!-- ====================================================================== -->
<!--                           WXLUA MAIN BAKEFILE                          -->
<!-- ====================================================================== -->

<makefile>

    <using module="pkgconfig"/>


    <!-- This is required because it contains the definitions of a lot of utils -->
    <include file="wxluabase.bkl"/>


    <if cond="TARGETING_WIN32=='1'">

        <!-- We need to have these variables defined when calling the subproject makefiles ! -->
        <set var="VARS_DONT_ELIMINATE" append="1">

            <!-- compilers (at least with MINGW there are problems if these get removed) -->
            CC CXX CFLAGS CXXFLAGS CPPFLAGS LDFLAGS

            <!-- generic options -->
            SHARED BUILD UNICODE

            <!-- global options -->
            USE_SYSTEM_LUA LUA_INCLUDE_DIR LUA_LIB_DIR RUNTIME_LIBS THREADING

            <!-- wxWidgets build selection options -->
            WX_DIR WX_VERSION WX_SHARED WX_MONOLITHIC

            <!-- app options-->
            USE_WXLUAAPP USE_WXLUACANAPP USE_WXLUAEDITAPP USE_WXLUAFREEZEAPP WXSTEDIT_DIR

            <!-- modules options -->
            USE_WXBINDADV USE_WXBINDAUI USE_WXBINDBASE USE_WXBINDCORE USE_WXBINDGL USE_WXBINDHTML
            USE_WXBINDMEDIA USE_WXBINDNET USE_WXBINDRICHTEXT USE_WXBINDSTC USE_WXBINDXML USE_WXBINDXRC
            USE_WXLUADEBUG USE_WXLUASOCKET USE_LUAMODULE MONOLITHIC_LUAMODULE INSTALL_CUSTOM_WXBIND
        </set>
    </if>




    <!-- ================================================================== -->
    <!--                            AUXILIARY TARGETS                       -->
    <!-- ================================================================== -->


    <set var="FILELISTDIR">../..</set>
    <if cond="FORMAT!='autoconf'">
        <set var="WXLUA_BASEDIR">../..</set>
        <set-srcdir>../..</set-srcdir>
    </if>
    <if cond="FORMAT=='autoconf'">
        <set var="WXLUA_BASEDIR">.</set>
        <set-srcdir>.</set-srcdir>

        <!-- note that $(WXLUA_BASEDIR) != $(SRCDIR) since the latter is prepended
             with $(srcdir) for autoconf format!
        -->
    </if>


    <!-- ================================================================== -->
    <!--                The modules libraries & samples                     -->
    <!-- ================================================================== -->

    <subproject id="modules">
        <installable>yes</installable>
        <dependency-of>all</dependency-of>
        <dir>$(WXLUA_BASEDIR)/modules/$(SUBPROJECT_POSTFIX_PATH)</dir>
        <target/>
    </subproject>


    <!-- ================================================================== -->
    <!--                     The wxLua applications                         -->
    <!-- ================================================================== -->

    <subproject id="apps" cond="USE_APPS=='1'">
        <installable>yes</installable>
        <dependency-of>all</dependency-of>
        <dir>$(WXLUA_BASEDIR)/apps/$(SUBPROJECT_POSTFIX_PATH)</dir>
        <target/>
    </subproject>


    <!-- ================================================================== -->
    <!--                     Datafiles installation                         -->
    <!-- ================================================================== -->

    <if  cond="TARGETING_UNIX=='1'">

        <template id="srcstuff">
            <dependency-of>install</dependency-of>
            <srcdir>$(top_srcdir)</srcdir>
        </template>

        <!-- targets mainly required for autopackage creation -->
        <copy-files id="samples" template="srcstuff">
            <dstdir>$(DESTDIR)$(DATADIR)/wxlua/samples</dstdir>
            <files>$(fileList([ 'samples/*.wx.lua', 'samples/*.xrc' ]))</files>
        </copy-files>
        <copy-files id="desktop" template="srcstuff">
            <dstdir>$(DESTDIR)$(DATADIR)/applications</dstdir>
            <files>distrib/autopackage/wxlua.desktop</files>
        </copy-files>
        <copy-files id="mime" template="srcstuff">
            <dstdir>$(DESTDIR)$(DATADIR)/mime/packages</dstdir>
            <files>distrib/autopackage/wxlua.xml</files>
        </copy-files>
        <copy-files id="icon" template="srcstuff">
            <dstdir>$(DESTDIR)$(DATADIR)/pixmaps</dstdir>
            <files>art/wxlualogo.xpm</files>
        </copy-files>

        <!-- also uninstall stuff installed above -->
        <modify-target target="uninstall">
            <command>rm -f $(DESTDIR)$(LIBDIR)/pkgconfig/wxlua.pc</command>
            <command>rm -rf $(DESTDIR)$(DATADIR)/wxlua</command>
            <command>rm -f $(DESTDIR)$(DATADIR)/applications/wxlua.desktop</command>
            <command>rm -f $(DESTDIR)$(DATADIR)/mime/packages/wxlua.xml</command>
            <command>rm -f $(DESTDIR)$(DATADIR)/pixmaps/wxlualogo.xpm</command>
        </modify-target>
    </if>



    <!-- ================================================================== -->
    <!--                  Miscellaneous utility targets                     -->
    <!-- ================================================================== -->
<!--
    <pkgconfig id="pkgconfig" cond="FORMAT=='autoconf'">
        <src>$(top_builddir)/build/autoconf/wxlua.pc</src>
    </pkgconfig>
-->
    <!-- This is not an 'all' dependency; it's a separed target to be called explicitly -->
    <action id="docs">
        <command>@echo =============================================</command>
        <command>@echo Creating wxLua documentation using doxygen...</command>
        <command>@echo =============================================</command>

        <if cond="TARGETING_WIN32=='1'">
            <command>cd $(SRCDIR)\docs</command>
            <command>doxygen doxygen.cfg</command>
        </if>
        <if cond="TARGETING_WIN32=='0'">
            <!--
                 The DOC tree is not copied by configure when using a
                 build folder different from the root folder of the project !
                 Thus we need to build docs directly in the source tree...
            -->
            <command>( cd $(top_srcdir)/docs &amp;&amp; doxygen doxygen.cfg )</command>
        </if>
    </action>

    <!-- This is not an 'all' dependency; it's a separed target to be called explicitly -->
    <action id="compress" cond="TARGETING_WIN32=='1'">

        <command>@echo =============================================</command>
        <command>@echo Compressing wxLua binaries (requires UPX)...</command>
        <command>@echo =============================================</command>

        <!-- uses UPX to compress the final EXEs
             (which should have been compiled with BUILD=release !) -->
        <command>cd ..\..\bin</command>
        <command>upx -9 --force *.exe</command>
        <command>cd ..\build\msw</command>
    </action>

    <!-- This is not an 'all' dependency; it's a separed target to be called explicitly -->
    <action id="autopackage" cond="FORMAT=='autoconf'">
        <!-- This target cannot depend from distclean otherwise the default.apspec
             file generated by configure would be removed before the call to makeinstaller ! -->
        <depends>clean</depends>
        <command>makeinstaller build/autopackage/default.apspec</command>
    </action>
    <if cond="FORMAT=='autoconf'">
        <modify-target target="distclean">
            <clean-files>build/autopackage/default.apspec</clean-files>
        </modify-target>
    </if>




    <!-- ================================================================== -->
    <!--                  OPTIONS CHECKING FOR MAKEFILES                    -->
    <!-- ================================================================== -->


    <!-- TODO: the following error is enabled only for MSVC and AUTOCONF (see configure.ac) currently ! -->

    <!-- Longer explanation of the error: it just makes no sense to link a SHARED build of wxLua to a
         STATIC build of wxWidgets since *any* object file which ends up in a .DLL/.SO needs to be compiled
         with special flags (e.g. -fPIC with GCC) - trying to link a SHARED build of wxLua to a
         STATIC build of wxWidgets would be equivalent to put object files compiled for a static build
         in a DLL - this will just fail at link-time with lots of difficult-to-understand error message !!!
    -->
    <fragment format="msvc">
!if "$(SHARED)" == "1" &amp;&amp; "$(WX_SHARED)" == "0"
!error Cannot build a SHARED version of wxLua (SHARED is 1) against a static version of wxWidgets (WX_SHARED is 0) ! You can only do the opposite (STATIC build of wxLua against SHARED build of wxWidgets)
!endif
    </fragment>


</makefile>
